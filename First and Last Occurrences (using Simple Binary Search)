int firstOccr(vector<int> a, int n, int x) {
	// Write your code here
	int first = -1;
	int low = 0, high = n-1;
	while(low<=high){
		int mid = (low + high)/2;
		if(a[mid] == x){
			first = mid;
			high = mid-1;
		}
		else if(a[mid] < x) low = mid+1;
    else high = mid-1;
	}
	return first;
}
int lastOccr(vector<int> &a, int n, int x){
	// Write your code here.		
	int last = -1;
	int low = 0, high = n-1;
	while(low<=high){
		int mid = (low + high)/2;
		if(a[mid] == x){
			last = mid;
			low = mid+1;
		}
		else if(a[mid] < x)low = mid+1;
    else high = mid-1;
	}
	return last;
}
    vector<int> searchRange(vector<int>& a, int k) {
       int first = firstOccr(a, n, k);
        if(first==-1) return {-1, -1};
        int last = lastOccr(a, n, k);
        return {first, last};
    }
